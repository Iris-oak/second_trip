<%= form_tag('/users/search', method: :get) do %>
    <%= label_tag :目的地区 %>
    <%= text_field_tag :search_address %>
    <%= submit_tag '検索' %>
<% end %>
<table>
    <tbody>
        <thead>
            <tr>
                <th>観光地名称</th>
                <th>所在地</th>
            </tr>
        </thead>
        <% @unknownsights.each do |unknown| %>
            <tr>
               <td><%= unknown.sightName %></td>
               <td><%= unknown.address %></td>
            </tr>
        <% end %>
    </tbody>
</table>
<br>
<br>
<br>
<h2>未知の観光地図</h2>
<div id='map'></div>

<!-- id=mapの大きさを指定 -->
<style>
#map{
  height: 300px;
}
</style>

<script>
// 下記codeAddressでも使うため、mapを関数の外で定義、geocoderも用意
let map
let geocoder
let marker = []; // マーカーを複数表示させたいので、配列化
let infoWindow = []; // 吹き出しを複数表示させたいので、配列化
const unknownsights = gon.unknownsights; // コントローラーで定義したインスタンス変数を変数に代入

function initMap(){
    // geocoderを初期化
    geocoder = new google.maps.Geocoder()

    // mapの初期位置設定
    map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: -35.6809591, lng: 139.7673068},
        zoom: 14
    });

    // forは繰り返し処理
    // 変数iを0と定義し、 その後gonで定義したunknownsights分繰り返し加える処理を行う
    for (let i = 0; i < unknownsights.length; i++) {
        
        // geocoderで addressの経緯緯度取得
        // unknownsights[i]は変数iの未訪問観光地を取得している
        geocoder.geocode( { 'address': unknownsights[i].address }, function(results, status) {
            
            // statusがOKであれば
            if (status == 'OK') {

             // map.setCenterで地図が移動
                map.setCenter(results[0].geometry.location);
                marker[i] = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
           
                // 変数iを変数idに代入
                let id = unknownsights[i]['id']

                // infoWindowは吹き出し
                infoWindow[i] = new google.maps.InfoWindow({
                    // contentで中身を指定
                    // 今回は文字にリンクを貼り付けた形で表示
                    content: `<a ${unknownsights[i].sightName}</a>`
                });
            
                // markerがクリックされた時、
                marker[i].addListener("click", function(){
                
                    // infoWindowを表示
                    infoWindow[i].open(map, marker[i]);
                });

            // エラーが出た場合            
            } else {
                // statusにエラー状況が表示される
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }


function codeAddress(){

    // 入力を取得
    let inputAddress = document.getElementById('address').value;
    // geocodingしたあとmapを移動
}
</script>

<!-- GoogleAPIキーを読み込むための記述 -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['SECRET_KEY'] %>&callback=initMap" async defer>
</script>